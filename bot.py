# bot.py
# –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –±–æ—Ç–∞, –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á.
import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.types import BotCommand
from datetime import datetime, timedelta, time
import pytz
from config import BOT_TOKEN
from handlers import router
from database import create_tables, get_all_medicines_with_time, get_user_timezone, decrement_medicine_quantity, get_medicine_by_id, delete_medicine

# bot.py
# aiogram: 3.x.x
# python: 3.9+

logging.basicConfig(level=logging.INFO)

async def set_commands(bot: Bot):
    """
    –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö –≤ –º–µ–Ω—é.
    """
    commands = [
        BotCommand(command="/start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ üöÄ"),
        BotCommand(command="/add", description="–î–æ–±–∞–≤–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ üíä"),
        BotCommand(command="/status", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤ üìã"),
        BotCommand(command="/delete", description="–£–¥–∞–ª–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ üóëÔ∏è"),
        BotCommand(command="/timezone", description="–ò–∑–º–µ–Ω–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å üåç")
    ]
    await bot.set_my_commands(commands)

async def send_reminder(bot: Bot, user_id: int, medicine_id: int, medicine_name: str, medicine_dosage: str, medicine_dosage_unit: str): # –î–æ–±–∞–≤–∏–ª–∏ medicine_dosage_unit
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø—Ä–∏–µ–º–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞.
    –£–º–µ–Ω—å—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–æ–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —É–¥–∞–ª—è–µ—Ç –ª–µ–∫–∞—Ä—Å—Ç–≤–æ, –µ—Å–ª–∏ –æ–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å.
    """
    logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {medicine_name} (–¥–æ–∑–∞: {medicine_dosage} {medicine_dosage_unit})")
    try:
        dosage_str = medicine_dosage.rstrip('0').rstrip('.') if '.' in medicine_dosage else medicine_dosage # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –Ω—É–ª–∏ –∏ —Ç–æ—á–∫—É –∏–∑ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–∑–∏—Ä–æ–≤–∫–∏.
        dosage_value = float(medicine_dosage)

        unit_text = medicine_dosage_unit
        reminder_message = f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –ü—Ä–∏–º–∏—Ç–µ {dosage_str} {unit_text} {medicine_name} üíä"
        await bot.send_message(user_id, reminder_message)
        logging.info(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        medicine_info = await get_medicine_by_id(medicine_id) # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
        if medicine_info:
            current_remaining_quantity = medicine_info[5] # remaining_quantity - 6–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ—Ä—Ç–µ–∂–µ (–ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è dosage_unit)
            if current_remaining_quantity > 0:
                dosage_val = 1 # –î–æ–∑–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞ (–µ—Å–ª–∏ –Ω–µ —É–¥–∞—Å—Ç—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–æ–∑–∏—Ä–æ–≤–∫—É, —Ö–æ—Ç—è —Ç–µ–ø–µ—Ä—å –¥–æ–∑–∏—Ä–æ–≤–∫–∞ - —á–∏—Å–ª–æ).
                try:
                    dosage_val = float(medicine_dosage) # –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–æ–∑–∏—Ä–æ–≤–∫–∏ –≤ —á–∏—Å–ª–æ.
                except ValueError:
                    logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–æ–∑–∏—Ä–æ–≤–∫—É '{medicine_dosage}' –¥–ª—è medicine_id {medicine_id}, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ–∑—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1 –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞.")

                await decrement_medicine_quantity(medicine_id, dosage_val) # –£–º–µ–Ω—å—à–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤ –ë–î.
                updated_medicine_info = await get_medicine_by_id(medicine_id) # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ.
                if updated_medicine_info and updated_medicine_info[5] <= 0: # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å.
                    await bot.send_message(user_id, f"üíä –í–Ω–∏–º–∞–Ω–∏–µ! –õ–µ–∫–∞—Ä—Å—Ç–≤–æ '{medicine_name}' –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø–∞—Å—ã. ‚è≥")
                    await delete_medicine(medicine_id) # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
            elif current_remaining_quantity <= 0:
                logging.info(f"–õ–µ–∫–∞—Ä—Å—Ç–≤–æ {medicine_name} (medicine_id {medicine_id}) —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –∏–ª–∏ –æ—Å—Ç–∞—Ç–æ–∫ <= 0, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ —É–º–µ–Ω—å—à–µ–Ω–∏—é –æ—Å—Ç–∞—Ç–∫–∞.")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

async def scheduler_setup(bot: Bot):
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.
    """
    logging.info("–ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É")
    while True:
        now_utc = datetime.now(pytz.utc) # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC.
        medicines = await get_all_medicines_with_time() # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ª–µ–∫–∞—Ä—Å—Ç–≤ —Å –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä–∏–µ–º–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
        logging.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –Ω–∞ {now_utc.strftime('%H:%M UTC')}. –ù–∞–π–¥–µ–Ω–æ –ª–µ–∫–∞—Ä—Å—Ç–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {len(medicines)}")

        for medicine_id, user_id, name, dosage_str, dosage_unit, reminder_time_str, remaining_quantity in medicines: # –ü–æ–ª—É—á–∞–µ–º dosage_unit –∏ remaining_quantity –∏–∑ –±–∞–∑—ã
            user_timezone_str = await get_user_timezone(user_id) # –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
            if user_timezone_str:
                user_timezone = pytz.timezone(user_timezone_str) # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç pytz.
                reminder_times = [datetime.strptime(rt.strip(), "%H:%M").time() for rt in reminder_time_str.split(',')] # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç—ã time.
                dosages = [d.strip() for d in dosage_str.split(',')] # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–æ–∑–∏—Ä–æ–≤–æ–∫.
                now_user_tz = now_utc.astimezone(user_timezone) # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

                for index, reminder_time in enumerate(reminder_times): # –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞.
                    if now_user_tz.hour == reminder_time.hour and now_user_tz.minute == reminder_time.minute: # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä–∏–µ–º–∞.
                        dose_to_send = dosages[index] if index < len(dosages) else dosages[-1] if dosages else "–Ω–µ —É–∫–∞–∑–∞–Ω–∞" # –í—ã–±–æ—Ä –¥–æ–∑–∏—Ä–æ–≤–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏.
                        logging.info(f"–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, –ª–µ–∫–∞—Ä—Å—Ç–≤–æ {name}, –≤—Ä–µ–º—è {reminder_time.strftime('%H:%M')}, –¥–æ–∑–∞ {dose_to_send} {dosage_unit}")
                        await send_reminder(bot, user_id, medicine_id, name, dose_to_send, dosage_unit) # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –ø–µ—Ä–µ–¥–∞–µ–º dosage_unit
            else:
                logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ {name} –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —ç—Ç–æ—Ç —Ä–∞–∑.")

        await asyncio.sleep(60) # –ü–∞—É–∑–∞ –≤ 60 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π.

async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ—Ç–∞, –¥–∏—Å–ø–µ—Ç—á–µ—Ä, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫.
    """
    logging.basicConfig(level=logging.INFO)
    bot = Bot(BOT_TOKEN, parse_mode=ParseMode.HTML) # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞ –∏ —Ä–µ–∂–∏–º–∞ HTML –ø–∞—Ä—Å–∏–Ω–≥–∞.
    dp = Dispatcher() # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞.
    dp.include_router(router) # –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.

    await set_commands(bot) # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.
    await create_tables() # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç.
    asyncio.create_task(scheduler_setup(bot)) # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.

    await dp.start_polling(bot) # –ó–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞ –¥–ª—è –ø—Ä–∏–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram.

if __name__ == "__main__":
    asyncio.run(main())